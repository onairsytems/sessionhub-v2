name: Continuous Deployment

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  deploy:
    name: Build and Deploy
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Quality Gates
      run: |
        echo "üîç Running all quality checks before deployment..."
        npm run validate:strict
        npm run error:check
        npm test -- --passWithNoTests
        
    - name: Build Application
      run: |
        echo "üèóÔ∏è Building production application..."
        npm run build
        npm run electron:build
        
    - name: Package for macOS
      run: |
        echo "üì¶ Creating macOS package..."
        npm run electron:dist:mac
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        CSC_LINK: ${{ secrets.CSC_LINK }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        
    - name: Notarize macOS App
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "üîè Notarizing macOS application..."
        # Notarization handled by electron-builder
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sessionhub-mac
        path: dist/*.dmg
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.dmg
          dist/*.zip
        body: |
          # SessionHub ${{ github.ref_name }}
          
          ## Quality Metrics
          - ‚úÖ Zero TypeScript errors
          - ‚úÖ Zero ESLint violations
          - ‚úÖ All tests passing
          - ‚úÖ Security audit passed
          - ‚úÖ Two-Actor Model compliance verified
          
          ## Installation
          Download the .dmg file for macOS and follow the installation instructions.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}