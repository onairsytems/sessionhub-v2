{
  "name": "sessionhub",
  "version": "1.0.0",
  "description": "AI-Powered Development Platform with Two-Actor Model",
  "author": "SessionHub Team",
  "homepage": "https://sessionhub.com",
  "main": "dist/main/background-simple.js",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "npm run git:clean-check && npm run zero-tolerance:enforce && npm run validate:strict && next build",
    "build:check": "tsc --noEmit",
    "start": "next start",
    "lint": "next lint",
    "validate": "npm run tsconfig:validate && tsc --noEmit && echo '✅ TypeScript validation passed!'",
    "validate:strict": "ts-node --project tsconfig.node.json scripts/strict-build-validator.ts",
    "build:strict": "npm run validate:strict && npm run build",
    "build:verify": "npm run build:strict && npm run postbuild:verify",
    "postbuild:verify": "ts-node --project tsconfig.node.json scripts/post-build-validator.ts",
    "error:check": "ts-node --project tsconfig.node.json scripts/check-errors.ts",
    "error:monitor": "ts-node scripts/start-monitor.ts",
    "error:install-hooks": "ts-node -e \"require('./src/core/error-detection/CICDIntegration').CICDIntegration.createPreCommitHook()\"",
    "tsconfig:validate": "ts-node --project tsconfig.node.json scripts/tsconfig-guardian.ts validate",
    "tsconfig:enforce": "ts-node --project tsconfig.node.json scripts/tsconfig-guardian.ts enforce",
    "tsconfig:watch": "ts-node --project tsconfig.node.json scripts/tsconfig-guardian.ts watch",
    "zero-tolerance:setup": "./scripts/setup-zero-tolerance.sh",
    "zero-tolerance:enforce": "npm run tsconfig:enforce && npm run error:check",
    "bypass:monitor": "ts-node --project tsconfig.node.json scripts/start-bypass-monitor.ts",
    "zero-tolerance:test": "./scripts/test-zero-tolerance.sh",
    "git:clean-check": "ts-node --project tsconfig.node.json scripts/git-clean-check.ts",
    "quality:check": "npm run build:check && npm run lint && npm run git:clean-check",
    "console:remove": "ts-node --project tsconfig.node.json scripts/remove-console-statements.ts",
    "console:check": "ts-node --project tsconfig.node.json scripts/check-console-statements.ts",
    "quality:metrics": "ts-node --project tsconfig.node.json scripts/quality-metrics.ts",
    "claude:setup": "./scripts/setup-claude-auto-accept.sh",
    "claude:enable": "ts-node --project tsconfig.node.json scripts/claude-auto-accept.ts enable",
    "claude:disable": "ts-node --project tsconfig.node.json scripts/claude-auto-accept.ts disable",
    "claude:status": "ts-node --project tsconfig.node.json scripts/claude-auto-accept.ts status",
    "claude:full-access": "./scripts/claude-full-access.sh",
    "claude:ultimate": "./scripts/claude-ultimate-auto-accept.sh",
    "electron:dev": "concurrently \"npm run dev\" \"wait-on http://localhost:3000 && electron .\"",
    "electron:build": "npm run git:clean-check && npm run validate:strict && npm run build && npm run electron:compile",
    "electron:compile": "tsc -p tsconfig.electron.json",
    "electron:pack": "npm run electron:build && electron-builder --dir",
    "electron:dist": "npm run electron:build && electron-builder",
    "electron:dist:mac": "npm run electron:build && electron-builder --mac",
    "dist": "npm run electron:dist:mac",
    "pack": "npm run electron:pack",
    "postinstall": "electron-builder install-app-deps && ./scripts/install-quality-gates.sh",
    "prepare": "husky",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:integration": "ts-node tests/integration/test-orchestration.ts",
    "test:two-actor": "ts-node tests/two-actor-architecture/run-all-tests.ts",
    "test:smoke": "ts-node tests/smoke/run-smoke-tests.ts",
    "deploy:verify": "ts-node scripts/verify-deployment.ts",
    "changelog:generate": "ts-node scripts/generate-changelog.ts",
    "release:beta": "ts-node scripts/release-beta.ts",
    "release:production": "ts-node scripts/release-production.ts",
    "build:production": "NODE_ENV=production npm run build:strict && npm run electron:compile",
    "build:analyze": "ANALYZE=true next build",
    "test:stress": "ts-node --project tsconfig.node.json tests/stress/production-stress-test.ts",
    "test:performance": "npm run test:stress -- --performance",
    "optimize:db": "ts-node --project tsconfig.node.json scripts/optimize-database.ts",
    "monitor:performance": "ts-node --project tsconfig.node.json scripts/performance-monitor.ts",
    "profile:memory": "node --expose-gc --inspect scripts/memory-profiler.js",
    "benchmark": "ts-node --project tsconfig.node.json scripts/run-benchmarks.ts"
  },
  "dependencies": {
    "@octokit/rest": "^22.0.0",
    "@supabase/supabase-js": "^2.50.0",
    "better-sqlite3": "^11.10.0",
    "clsx": "^2.1.0",
    "electron-serve": "^1.3.0",
    "electron-store": "^8.2.0",
    "electron-updater": "^6.1.7",
    "lucide-react": "^0.323.0",
    "next": "14.1.0",
    "react": "^18",
    "react-dom": "^18",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@jest/globals": "^30.0.0-beta.3",
    "compression-webpack-plugin": "^11.1.0",
    "terser-webpack-plugin": "^5.3.10",
    "webpack-bundle-analyzer": "^4.10.2",
    "@jest/types": "^29.6.3",
    "@types/better-sqlite3": "^7.6.13",
    "@types/electron-is-dev": "^0.3.0",
    "@types/eslint": "^9.6.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "chokidar": "^4.0.3",
    "concurrently": "^8.2.2",
    "electron": "^28.2.0",
    "electron-builder": "^24.9.1",
    "electron-is-dev": "^3.0.1",
    "electron-reload": "^2.0.0-alpha.1",
    "eslint": "^8",
    "eslint-config-next": "14.1.0",
    "glob": "^11.0.2",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "ts-jest": "^29.3.4",
    "ts-node": "^10.9.2",
    "typescript": "^5"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "build": {
    "appId": "com.sessionhub.app",
    "productName": "SessionHub",
    "copyright": "Copyright © 2025 SessionHub",
    "directories": {
      "output": "dist-electron",
      "buildResources": "resources"
    },
    "files": [
      "dist/main/**/*",
      "out/**/*",
      "node_modules/**/*",
      "!node_modules/@types/**/*",
      "!node_modules/typescript/**/*",
      "!node_modules/eslint/**/*"
    ],
    "fileAssociations": [
      {
        "ext": "shub",
        "name": "SessionHub Project",
        "description": "SessionHub Project File",
        "icon": "resources/icon.icns",
        "role": "Editor"
      },
      {
        "ext": "shubsession",
        "name": "SessionHub Session",
        "description": "SessionHub Session File",
        "icon": "resources/icon.icns",
        "role": "Editor"
      },
      {
        "ext": "shubtemplate",
        "name": "SessionHub Template",
        "description": "SessionHub Template File",
        "icon": "resources/icon.icns",
        "role": "Viewer"
      }
    ],
    "protocols": [
      {
        "name": "SessionHub Protocol",
        "schemes": ["sessionhub"]
      }
    ],
    "mac": {
      "target": [
        {
          "target": "dmg",
          "arch": ["universal"]
        },
        {
          "target": "zip",
          "arch": ["universal"]
        }
      ],
      "category": "public.app-category.developer-tools",
      "minimumSystemVersion": "13.0",
      "hardenedRuntime": true,
      "gatekeeperAssess": false,
      "entitlements": "resources/entitlements.mac.plist",
      "entitlementsInherit": "resources/entitlements.mac.plist",
      "extendInfo": {
        "NSUserNotificationAlertStyle": "alert",
        "LSUIElement": false,
        "CFBundleURLTypes": [
          {
            "CFBundleURLSchemes": ["sessionhub"],
            "CFBundleURLName": "SessionHub Protocol"
          }
        ],
        "NSSupportsAutomaticTermination": false,
        "NSSupportsSuddenTermination": false
      },
      "icon": "resources/icon.icns",
      "bundleVersion": "100",
      "type": "distribution",
      "identity": null,
      "notarize": false
    },
    "dmg": {
      "title": "SessionHub ${version}",
      "icon": "resources/icon.icns",
      "background": "resources/dmg-background.png",
      "window": {
        "width": 600,
        "height": 400
      },
      "contents": [
        {
          "x": 150,
          "y": 200,
          "type": "file"
        },
        {
          "x": 450,
          "y": 200,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "afterSign": "scripts/notarize.js",
    "publish": [
      {
        "provider": "generic",
        "url": "https://update.sessionhub.com"
      }
    ]
  }
}
